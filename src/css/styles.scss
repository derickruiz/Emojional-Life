@import "normalize";
@import "base";
@import "variables";

body,
p {
  margin: 0;
  padding: 0;
}

@import "atomic";

// Modules

.App-container,
.App-container.moveLeft {
  transform: translate3d(0px, 0px, 0px);
  transition: transform 350ms cubic-bezier(0.23, 1, 0.32, 1);
}

.App-container.moveLeft {
  transform: translate3d(-50%, 0px, 0px);
}

.Emotion {
  display: flex;
  justify-content: center;
  align-items: center;
}

.Emotions {
  display: grid;
  grid-template-columns: repeat(2, 50vw);
  grid-template-rows: repeat(4, 25vh);
}

.Emotions::before {
  content: " ";
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  
  background-color: rgba(0, 0, 0, 0.5);
  
  z-index: 1;
}

.Emotions::after {
  content: "ðŸ˜€";
  position: absolute;
  top: 50vh;
  left: 50vw;
  
  transform: translate3d(-50%, -50%, 0);
  
  font-size: 20vh;
  
  z-index: 2;
  
  animation: bounce 1.5s 0s infinite;
  
}

@keyframes bounce {
  0% { top: 50vh; }
  50% { top: 40vh; }
  100% { top: 50vh; }
}

.BackgroundColor {
  
  &--oxford {
    background-color: $color-oxfordBlue;
  }
  
  &--oxford:hover {
    background-color: darken($color-oxfordBlue, 4%);
  }
  
  &--pastel {
    background-color: $color-pastelBrown;
  }
  
    &--pastel:hover {
      background-color: darken($color-pastelBrown, 4%);
    }
  &--rajah {
    background-color: $color-rajah;
  }
    
  &--rajah:hover {
      background-color: darken($color-rajah, 4%);
    }
    
  &--tractor {
    background-color: $color-tractorRed;
  }
  
    &--tractor:hover {
      background-color: darken($color-tractorRed, 4%);
    }
    
  &--pictoral {
    background-color: $color-pictoralCarmine;
  }
  
    &--pictoral:hover {
      background-color: darken($color-pictoralCarmine, 4%);
    }
    
  &--spanish {
    background-color: $color-spanishCrimson;
  }
  
    &--spanish:hover {
      background-color: darken($color-spanishCrimson, 4%);
    }
    
  &--smoky {
    background-color: $color-smokyBlack;
  }
  
    &--smoky:hover {
      background-color: darken($color-smokyBlack, 4%);
    }
    
  &--caribeen {
    background-color: $color-caribeenGreen;
  }
    
    &--caribeen:hover {
      background-color: darken($color-caribeenGreen, 4%);
    }
    
}


.Switcher {
  
  position: fixed;
  bottom: 1rem;
  left: 50%;
  transform: translate3d(-50%, 0px, 0px);
  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.5);
  
  width: 80px;
  height: 26px;
  background: #333;
  margin: 20px auto;
  border-radius: 50px;
  box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,0.2);
  
  &:after {
    
    content: 'ðŸ•—';
    color: #000;
    position: absolute;
    right: 10px;
    z-index: 0;
    font: 12px/26px Arial, sans-serif;
    font-weight: bold;
    text-shadow: 1px 1px 0px rgba(255,255,255,.15);
    
  }
  
  &:before {
    
    content: 'ðŸ¤“';
    color: blue;
    position: absolute;
    left: 10px;
    z-index: 0;
    font: 12px/26px Arial, sans-serif;
    font-weight: bold;
    
  }
  
  label {
    
    display: block;
    width: 20px;
    height: 20px;
    cursor: pointer;
    position: absolute;
    top: 3px;
    left: 6px;
    z-index: 1;
    background: #fcfff4;
    background: linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #b3bead 100%);
    border-radius: 50%;
    transition: all 350ms cubic-bezier(0.23, 1, 0.32, 1);
    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.3);
    
  }
  
  input[type=checkbox] {
    
    visibility: hidden;
    
    &:checked + label {
      
      left: 54px;
      
    }
    
  }    
  
}
/* end .slideThree */

.Clearfix:before,
.Clearfix:after {
  content: "";
  display: table;
}

.Clearfix:after {
  clear: both;
}

.Screen {
  min-height: 100vh;
}

.Tracked {
  
  &--empty {
    background-color: #000;
    display: flex;
    height: 100vh;
    
    justify-content: center;
    align-items: center;
  }
  
  &--emptyEmoji {
    font-size: 4.23580103125rem;
  }
}

.Toucher {
  width: 100%;
  height: 3rem;
  opacity: 0;
  position: fixed;
  bottom: 0;
  
  z-index: 5;
}